# Input file for the automated creation GGA docker stacks
# The file consists in a "list" of species for which the script will have to create these stacks/load data into galaxy/run workflows
# This file is internally turned into a list of dictionaries by the scripts

# Dummy value the user gives to designate the species (isn't used by the script)
citrus_sinensis:
  # Species description, leave blank if unknown or you don't want it to be used
  # These parameters are used to set up the various urls and adresses in different containers
  # The script requires at least the genus to be specified
  description:
    genus: "citrus"
    species: "sinensis"
    sex: ""
    strain: ""
    common_name: ""
    origin: ""
  data:
    parent_directory: ""
    # Sequence of paths to the different datasets to copy and import into galaxy
    # WARNING: The paths must be absolute paths!
    genome_path: "{{ repo_folder }}/examples/src_data/genome/v1.0/Citrus_sinensis-scaffold00001.fasta"
    transcripts_path: "{{ repo_folder }}/examples/src_data/annotation/v1.0/Citrus_sinensis-orange1.1g015632m.g.fasta"
    proteins_path: "{{ repo_folder }}/examples/src_data/annotation/v1.0/functional_annotation/Blastx_citrus_sinensis-orange1.1g015632m.g.fasta.0_vs_nr.out"
    #proteins_path: "{{ repo_folder }}/examples/src_data/annotation/v1.0/functional_annotation/Blastx_citrus_sinensis-orange1.1g015632m.g.fasta.0_vs_uniprot_sprot.fasta.out"
    gff_path: "{{ repo_folder }}/examples/src_data/annotation/v1.0/Citrus_sinensis-orange1.1g015632m.g.gff3"
    interpro_path: ""
    orthofinder_path: ""
    blastp_path: ""
    blastx_path: ""
    # If the user has several genomes to upload to galaxy, the next scalar is used by the script to differentiate
    # between these different versions and name directories according to it.
    # If left empty, the genome will be considered version "1.0"
    genome_version: "1.0"
    # Same as genome version, but for the analysis
    ogs_version: ""
    performed_by: ""
  services:
  # Describe what optional services to deploy for the stack
  # By default, only tripal, tripaldb and galaxy services will be deployed
    blast: "False"
    wiki: "False"
    apollo: "False"
